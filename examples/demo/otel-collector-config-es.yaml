receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - http://*

connectors:
  spanmetrics:
    histogram:
      explicit:
        buckets: [100us, 500us, 2ms, 4ms, 8ms, 10ms, 50ms, 100ms, 200ms, 500ms, 800ms, 1s, 1400ms, 2s, 5s, 10s, 30s, 60s]
    aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"
    metrics_flush_interval: 15s
    dimensions_cache_size: 4000

exporters:
  prometheus:
    endpoint: "0.0.0.0:8889"
    const_labels:
      label1: value1
  logging:
  elasticsearch/trace:
    endpoints: [http://elasticsearch:9200]
#    traces_index: otlp_spans
#    user: elastic
#    password: 8QZJ656ax3TXZqQh205l3Ee0
    mapping:
      mode: jaeger
    jaeger_index_alias:
      span: jaeger-span-write
      service: jaeger-service-write
processors:
  batch:

extensions:
  health_check:
  pprof:
    endpoint: :1888

service:
  extensions: [health_check]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [spanmetrics, logging, elasticsearch/trace]
    metrics:
      # this pipeline handle otlp and span/graph metrics, remote write to prometheus(agent)
      receivers:
        - otlp
        - spanmetrics
      processors:
        - batch
      exporters:
        - prometheus