version: "2"
services:
  elasticsearch:
    image: elastic.m.daocloud.io/elasticsearch/elasticsearch:7.17.3
    networks: [ es ]
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
  # Collector
  openinsight:
    image: ${OTELCOL_IMG}
    networks: [ es ]
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    restart: always
    volumes:
      - ./otel-collector-config-es.yaml:/etc/otel-collector-config.yaml
#    ports:
#      - "1888:1888"   # pprof extension
#      - "18888:18888" # query extension
#      - "8888:8888"   # Prometheus metrics exposed by the collector
#      - "8889:8889"   # Prometheus exporter metrics
#      - "13133:13133" # health_check extension
#      - "4317:4317"   # OTLP gRPC receiver
#      - "55679:55679" # zpages extension
    depends_on:
      - elasticsearch

  demo-client:
    build:
      dockerfile: Dockerfile
      context: ./client
    restart: always
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=openinsight:4317
      - DEMO_SERVER_ENDPOINT=http://demo-server:7080/hello
    depends_on:
      - demo-server
    networks: [ es ]

  demo-server:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./server
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=openinsight:4317
    ports:
      - "7080"
    depends_on:
      - openinsight
    networks: [ es ]

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks: [ es ]

networks:
  es: