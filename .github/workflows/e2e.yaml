# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: E2E Test

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build-openinsight:
    if: github.repository == 'openinsight-proj/openinsight'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 90
    env:
      TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Login to GitHub Package Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.ACTIONS_TOKEN }}
      - name: Set up opentelemetry collector builder
        run: GO111MODULE=on go install go.opentelemetry.io/collector/cmd/builder@v0.62.1
      - name: Build otelcol
        env:
          TAG: ${{ github.sha }}
        run: make build-openinsight
      - name: Build otelcol e2e docker
        run: make build-openinsight-docker
  e2e-test:
    if: github.repository == 'openinsight-proj/openinsight'
    name: E2E test
    needs: [docker]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        test:
          - name: Storage Clickhouse [Traces,Logs,Metrics]
            config: test/e2e/cases/storage/clickhouse/e2e.yaml

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/download-artifact@v3
        name: Download docker images
        with:
          name: docker-images-8
          path: docker-images
      - name: Load docker images
        run: find docker-images -name "*.tar" -exec docker load -i {} \;
      - name: ${{ matrix.test.name }}
        uses: apache/skywalking-infra-e2e@964ede199fe199e166920169dc5f8c9b214cfac5
        with:
          e2e-file: $GITHUB_WORKSPACE/${{ matrix.test.config }}